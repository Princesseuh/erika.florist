---
import MobileQuickNav from "$components/layout/MobileQuickNav.astro";
import ArticlePreview from "$components/shared/ArticlePreview.astro";
import { blurb } from "$data/sidebarMenu";
import BaseLayout from "$layouts/BaseLayout.astro";
import { blogFilter, getURLFromEntry, readableDate } from "$utils";
import { getCollection } from "astro:content";

const articles = (await getCollection("blog")).filter(blogFilter);

const wikiItems = await getCollection("wiki");

const fullSortedData = [...articles, ...wikiItems].sort((a, b) => {
	// a and b can either be wikiItems or articles, so they either have a date or a lastModified property
	const aDate = a.collection === "blog" ? a.data.date : a.data.lastModified.date;
	const bDate = b.collection === "blog" ? b.data.date : b.data.lastModified.date;

	if (aDate === undefined || bDate === undefined) {
		console.log(a, b);
	}

	return bDate.getTime() - aDate.getTime();
});

function lowercaseFirstCharacter(text: string) {
	return `${text[0]?.toLowerCase()}${text.slice(1)}`;
}
---

<BaseLayout includeAboutInHeader>
	<div class="p-4 sm:hidden">
		<h1 class="m-0 text-accent-valencia">Hi! I'm Erika.</h1>
		<Fragment set:html={"I'm " + lowercaseFirstCharacter(blurb)} />
	</div>
	<MobileQuickNav />
	<div class="masonry relative mt-4">
		{
			fullSortedData.map((entry) =>
				entry.collection === "blog" ? (
					<ArticlePreview article={entry} />
				) : (
					<div class="absolute m-0">
						<a
							class="group mb-1 block border border-solid border-violet-ultra/15 px-6 py-2 font-medium leading-tight text-violet-ultra hover:bg-violet-ultra hover:text-white-sugar-cane focus:bg-violet-ultra focus:text-white-sugar-cane"
							href={getURLFromEntry(entry)}
						>
							{entry.data.title}
							<span
								class="block text-sm text-black-charcoal first-letter:uppercase group-hover:text-white-sugar-cane group-focus:text-white-sugar-cane"
								data-date={entry.data.lastModified.date}
							>
								{readableDate(entry.data.lastModified.date)}
							</span>
						</a>
					</div>
				),
			)
		}
	</div>
</BaseLayout>

<script>
	import { MiniMasonry } from "src/assets/scripts/masonry";

	new MiniMasonry({
		gutter: 12,
		baseWidth: 350,
		container: document.querySelector(".masonry")!,
	});
</script>
