---
import ExternalLink from "$components/ExternalLink.astro";
import ContentHeader from "$components/shared/ContentHeader.astro";
import TableOfContent from "$components/shared/TableOfContent.astro";
import { getWikiNavigation } from "$data/wiki";
import BaseLayout from "$layouts/BaseLayout.astro";
import { readableDate } from "$utils";
import { render, type CollectionEntry } from "astro:content";

interface Props {
	wikiItem: CollectionEntry<"wiki">;
}

const { wikiItem } = Astro.props;
const { Content, headings } = await render(wikiItem);
---

<BaseLayout
	title={wikiItem.data.title}
	description={wikiItem.data.tagline}
	navItems={await getWikiNavigation(new URL(Astro.request.url))}
>
	<section class="">
		<article class="">
			<ContentHeader item={wikiItem} includeTags={false} />
			<Content components={{ a: ExternalLink }} />

			<span class="">
				Page last modified <a
					href={wikiItem.data.lastModified.commitUrl}
					data-date={wikiItem.data.lastModified.date}
					>{readableDate(wikiItem.data.lastModified.date)}
				</a>
			</span>
		</article>

		<aside class="">
			{
				headings.length > 0 && (
					<TableOfContent headers={headings} maxDepth={wikiItem.data.maxDepthTOC ?? 4} />
				)
			}
		</aside>
	</section>
</BaseLayout>
