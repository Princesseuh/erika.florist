---
import { ARTICLE_PAGE_SIZE } from "$data/articles";
import ArticleListLayout from "$layouts/ArticleListLayout.astro";
import { blogDateSort, blogFilter } from "$utils";
import type { GetStaticPaths } from "astro";
import { getCollection } from "astro:content";

export const getStaticPaths = (async ({ paginate }) => {
	const articles = await getCollection("blog");

	// We need to create a list of unique tags here otherwise Astro will try to create already existing pages and complain
	const tags = articles.flatMap((article) => [...article.data.tags]);
	const uniqueTags = [...new Set(tags)];

	return uniqueTags.flatMap((tag) => {
		const filteredArticles = articles
			.filter((article) => article.data.tags.includes(tag))
			.sort(blogDateSort)
			.filter(blogFilter);
		return paginate(filteredArticles, { params: { tag }, pageSize: ARTICLE_PAGE_SIZE });
	});
}) satisfies GetStaticPaths;

const { page } = Astro.props;
const { tag } = Astro.params;
---

<ArticleListLayout page={page} title={tag} showAllButton />
