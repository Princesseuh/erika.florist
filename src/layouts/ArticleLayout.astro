---
import ExternalLink from "$components/ExternalLink.astro";
import ContentHeader from "$components/shared/ContentHeader.astro";
import TableOfContent from "$components/shared/TableOfContent.astro";
import BaseLayout from "$layouts/BaseLayout.astro";
import type { CollectionEntry } from "astro:content";

interface Props {
	article: CollectionEntry<"blog">;
}

const { article } = Astro.props;
const { Content, headings } = await article.render();
---

<BaseLayout title={article.data.title} description={article.data.tagline}>
	<section class="mx-auto flex gap-6">
		<article class="post w-[72ch] max-w-full">
			<ContentHeader item={article} includeTags />
			<Content components={{ a: ExternalLink }} />
		</article>

		<aside
			class="mb-4 mt-10 hidden w-1/4 flex-1 pr-2 transition-opacity duration-100 ease-linear hover:opacity-100 sm:block"
		>
			{
				headings.length > 0 && (
					<TableOfContent headers={headings} maxDepth={article.data.maxDepthTOC ?? 4} />
				)
			}
		</aside>
	</section>
</BaseLayout>

<script>
	const asides = document.querySelectorAll("aside");

	document.addEventListener(
		"scroll",
		() => {
			if (window.scrollY > 350 && window.scrollY < document.body.scrollHeight - 1000) {
				asides.forEach((aside, i) => {
					aside.classList.toggle(i === 0 ? "opacity-35" : "opacity-65", true);
				});
			} else {
				asides.forEach((aside, i) => {
					aside.classList.toggle(i === 0 ? "opacity-35" : "opacity-65", false);
				});
			}
		},
		{
			capture: false,
			passive: true,
		},
	);
</script>
