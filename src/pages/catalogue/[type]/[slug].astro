---
import { getCatalogueData } from "$data/catalogue";
import BaseLayout from "$layouts/BaseLayout.astro";
import type { GetStaticPaths } from "astro";
import { getImage } from "astro:assets";
import { getCollection } from "astro:content";

export const getStaticPaths = (async () => {
	let catalogueContent = [];

	for (const catalogueType of ["games", "movies", "shows", "books"] as const) {
		catalogueContent.push(...(await getCollection(catalogueType)));
	}

	return await Promise.all(
		catalogueContent.flatMap(async (entry) => ({
			params: { type: entry.data.type + "s", slug: entry.slug.split("/")[1] },
			props: { entry: entry, metadata: await getCatalogueData(entry) },
		})),
	);
}) satisfies GetStaticPaths;

const { entry, metadata } = Astro.props;
const { Content } = await entry.render();

const processedCover = await getImage({ src: entry.data.cover, width: 240 });
---

<BaseLayout>
	<article class="">
		<a href="/catalogue" class="">‚Üê Back to catalogue</a>
		<header class="">
			<a href={entry.data.cover.src} class=""
				><img
					src={processedCover.src}
					width={processedCover.attributes.width}
					height={processedCover.attributes.height}
					decoding="async"
				/></a
			>
			<section class="">
				<h2 class="">{entry.data.title}</h2>
				<span>{new Date(new Date(0).setUTCSeconds(1607472000)).getUTCFullYear()} - {}</span>
				{JSON.stringify(entry.data)}
				{JSON.stringify(metadata)}
			</section>
		</header>
		<h2>Thoughts</h2>
		<Content />
	</article>
</BaseLayout>
