<!-- ---
import ExternalLink from "$components/ExternalLink.astro";
import ArticlePreview from "$components/shared/ArticlePreview.astro";
import { getLastModified } from "$data/wiki";
import BaseLayout from "$layouts/BaseLayout.astro";
import { blogFilter, getURLFromEntry, readableDate } from "$utils";
import type { CollectionEntry } from "astro:content";
import { getCollection } from "astro:content";

const maxCol = 4;
const entriesPerCol = 3;
const articles = (await getCollection("blog"))
	.sort((a, b) => {
		return b.data.date.getTime() - a.data.date.getTime();
	})
	.filter(blogFilter)
	.slice(0, maxCol * entriesPerCol - 1);

const collumns: CollectionEntry<"blog">[][] = Array.from({ length: maxCol }, () => []);

let currentCol = 0;
articles.forEach((article) => {
	if (currentCol >= maxCol) return;

	if (article.data.featured && collumns[currentCol].length >= 1) {
		const [existingArticle] = collumns[currentCol];

		// If the existing article is also featured, just add it to the same column
		if (existingArticle.data.featured) {
			collumns[currentCol].push(article);
			return;
		}

		collumns[currentCol] = [article];
		collumns[currentCol + 1].push(existingArticle);
	} else {
		collumns[currentCol].push(article);
	}

	// TODO: Enable when I have one more article
	// if (currentCol === 0) {
	// 	if (collumns?.[currentCol]?.length >= entriesPerCol + 1) currentCol += 1;
	// } else {
	if (collumns?.[currentCol]?.length >= entriesPerCol) currentCol += 1;
	//}
});

const wikiItems = (await getCollection("wiki"))
	.map((wikiItem) => ({
		...wikiItem,
		lastModified: getLastModified(wikiItem).lastModifiedDate,
	}))
	.sort((a, b) => {
		return b.lastModified.getTime() - a.lastModified.getTime();
	})
	.slice(0, 7);
const featuredProjects = (await getCollection("projects"))
	.filter((project) => project.data.featured)
	.slice(0, 3);
---

<BaseLayout>
	<article class="mx-auto">
		<p class="mx-auto w-centered-width">
			Hello. I'm <span class="">Erika</span>, a software engineer living in Sweden&nbsp;ðŸ‡¸ðŸ‡ª, pleased
			to meet you!
		</p>

		<p class="mx-auto w-centered-width">
			I am currently employed at <ExternalLink href="https://astro.build">Astro</ExternalLink> where
			I do a bit of everything, though I am mostly found in high impact but often overlooked areas such
			as editor tooling.
		</p>

		<div class="flex justify-center gap-5">
			{
				collumns.map((col, i) => (
					<div class:list={["flex basis-1/5 flex-col gap-5"]}>
						{col.map((article) => (
							<ArticlePreview article={article} />
						))}
						{i === collumns.length - 1 && (
							<section class="bg-orange-carrot p-7 text-black-charcoal">
								<h2 class="m-0 mb-4 text-center text-3xl">Latest wiki modifications</h2>
								<ul class="m-0 p-0">
									{wikiItems.map((item) => (
										<li class="m-0 mb-3 list-none">
											<a class="block font-medium leading-tight" href={getURLFromEntry(item)}>
												{item.data.title}
											</a>
											<span
												class="block text-sm first-letter:uppercase"
												data-date={item.lastModified}
											>
												{readableDate(item.lastModified)}
											</span>
										</li>
									))}
								</ul>
							</section>
						)}
					</div>
				))
			}
		</div>
	</article>
</BaseLayout> -->
